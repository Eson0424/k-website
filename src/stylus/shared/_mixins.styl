@require '_variables'
@require '_functions'

// The glob * is recursive.
// Cannot use path alias ~@ with glob due to Stylus bug or limitation:
// https://github.com/shama/stylus-loader/issues/201
channel-specifics($component, $for-channels = $channels)
  for $channel in $for-channels
    #layout.{$channel}
      call-mixin('channel-' + $channel + '-' + $component)

asiamiles-loading-icon()
  image-channels-asiamiles-common-aml-loading-1x()
  width: 25.5px // No exact size image
  height: @width

/* Desktop mixins */
extra-wide-desktop(width = $extraWideScreenMinWidth)
  @media screen and (min-width: width)
    {block}

wide-desktop(width = $wideScreenMinWidth)
  @media screen and (min-width: width)
    {block}

narrow-desktop(width = $narrowScreenMaxWidth)
  @media screen and (max-width: width)
    {block}

responsive-desktop-width(useExtraWide = true, narrowWidth = $narrowPageWidth, wideWidth = $widePageWidth, extraWideWidth = $extraWidePageWidth)
  min-width: narrowWidth
  max-width: narrowWidth
  margin: 0 auto

  +wide-desktop()
    min-width: wideWidth
    max-width: wideWidth

  if useExtraWide
    +extra-wide-desktop()
      min-width: extraWideWidth
      max-width: extraWideWidth

popup-modal-box()
  or-scrollbar()
  padding: 30px
  position: relative
  background-color: $w
  max-height: 90vh
  min-width: 390px
  width: 450px
  overflow-x: hidden
  overflow-y: auto
  border-radius: 4px
  z-index: $zIndexModal
  margin: 0 auto

  &.no-padding
    padding: 0

  .page-title
    or-font($bgy, 24, B)
    margin-bottom: 20px

  .page-desc
    padding-bottom: 20px

play-button()
  position-center()
  inline-image-common-video-play-icon()
  cursor: pointer
  z-index: 5

/* Theme mixins */
or-theme(className, buttonColor, fontColor)
  .or-theme-{className}
    background-color: buttonColor
    color: fontColor

/* General mixins */
call-mixin($name)
  $mixin = lookup($name)
  // If does not need to support args, may just call as
  // $mixin()
  // To pass through args, since Stylus doesn't support spread syntax when calling mixin:
  // $mixin(arguments...)
  // we have to build a string like 'mixin-name(arg0,arg1,arg2)'
  // and use convert() to run the string as Stylus code.
  $stylus-statement = $name + '('

  for $arg, $i in arguments
    if ($i > 0)
      $stylus-statement += ($i > 1 ? ',' : '') + $arg

  $stylus-statement += ')'
  convert($stylus-statement)

underline-on-hover()
  &:hover
    text-decoration: underline

or-border(side, borderColor = $egy, borderWidth = 1px, borderStyle = solid)
  border-{side}: borderColor borderStyle borderWidth

or-border-radius(radius = $borderRadius)
  border-radius: radius

// Usage:
// or-font($bgy, 16)
// or-font($bgy, inherit, N)
//
// In case there is a already variable named N, B, etc., quote it as
// N = 'var named as N'
// or-font($bgy, 16, 'N')
or-font($color = null, $font-size = null, $font-weight = null)
  if $color != null
    color: $color

  if $font-size != null
    font-size: default-unit($font-size, 'px')

  if $font-weight != null
    or-font-weight($font-weight)

// Usage: or-font-weight(N), or-font-weight('N')
// Shortcut for "font-weight $font-weight-N"
// or even "font-weight: $font-weight.N" with the tricky ":"
or-font-weight($weight)
  $val = $font-weight[$weight] || $weight
  font-weight: $val

or-font-family($api-code, $channel = null, $important = false)
  $channel = $channel == 'asiamiles' ? 'asiamiles' : 'or'
  $family = lookup('$font-family-' + $channel + '-' + $api-code)
  font-family: $family convert($important ? '!important' : '')

// Usage:
// .some
// .path
// or-font-families()
// gives
// html[lang|="zh"] .some .path {
// font-family: Lato, Arial, ...
// }
// // Other langs ...
or-font-families($important = false)
  $caller-selector = selector()

  for $channel in 'asiamiles' 'or'
    $channel-attr = $channel != 'or' ? '[channel="' + $channel + '"]' : ''

    /html{$channel-attr}
      &[lang|="zh"]
      &[lang|="en"][country="HK"]
      &[lang|="en"][country="TW"]
        {$caller-selector}
          or-font-family('tc', $channel, $important)

      &[lang='zh-CN']
      &[lang|="en"][country="CN"]
      &[lang|="en"][country="SG"]
      &[lang|="en"][country="MY"]
        {$caller-selector}
          or-font-family('sc', $channel, $important)

      &[lang|="ja"]
      &[lang|="en"][country="JP"]
        {$caller-selector}
          or-font-family('ja', $channel, $important)

or-box-shadow(color = $b)
  box-shadow: 0 2px 4px 0 alpha(color, 50%)

bg-image-center()
  background-size: cover
  background-repeat: no-repeat
  background-position: center

image-disk($size)
  width: default-unit($size, 'px')
  height: @width
  border-radius: 50%

image-box(image, width, height)
  background-image: url(image)
  background-size: 100%
  display: block
  width: width
  height: height

inline-image-box(image, width, height)
  background-image: url(image)
  background-size: 100%
  display: inline-block
  width: width
  height: height

image-cover-center(height = null, width = null)
  background-size: cover
  background-position: center center

  if height != null
    height: default-unit(height, 'px')

  if width != null
    width: default-unit(width, 'px')

height-line-height(height)
  height: height
  line-height: height

vertical-center()
  position: absolute
  top: 50%
  transform: translateY(-50%)

horizontal-center()
  position: absolute
  left: 50%
  transform: translateX(-50%)

position-center()
  position: absolute
  top: 0
  bottom: 0
  left: 0
  right: 0
  margin: auto

flex-between-center()
  display: flex
  align-items: center
  justify-content: space-between

text-ellipsis-single-line()
  white-space: nowrap
  overflow: hidden
  text-overflow: ellipsis

text-ellipsis-multi-line(fontSize, lineHeight, maxLines, padding = 2px)
  overflow: hidden
  height: (fontSize * lineHeight * maxLines) + padding
  line-height: lineHeight

  &::before
    content: ''
    float: left
    width: 5px
    height: @height

  &::after
    content: '\02026'
    box-sizing: content-box
    float: right
    position: relative
    top: -(fontSize * lineHeight)
    left: 100%
    width: 3em
    margin-left: -3em
    padding-right: 5px
    background-size: 100% 100%
    text-align: right

text-ellipsis-gradient(bgColor)
  background: linear-gradient(to right, $color-transparent, bgColor 50%, bgColor)

sticky(type)
  position: sticky
  {type}: 0

/* Geometric shapes */
cross-x($size, $thickness, $color)
  position: relative
  width: $size
  height: $size
  overflow: hidden

  &::before
  &::after
    content: ''
    display: block
    position: absolute
    top: 0
    width: 100%
    height: $thickness
    background-color: $color

  &::before
    transform: skewY(45deg) translateY((($size - $thickness) / 2))

  &::after
    transform: skewY(135deg) translateY((($size - $thickness) / 2))

triangle-arrow($direction, $size, $color) // $direction: 'up', 'down', 'left', 'right'
  $to-index = { up: 0, right: 1, down: 2, left: 3 }
  $to-border = top right bottom left
  $index = $to-index[$direction]
  $main-side = ($index + 2) * 1 % 4 // *1 is workaround for Stylus's bug treating mod operator as a percentage unit
  $next-side = ($index + 1) * 1 % 4
  $prev-side = $index - 1
  $main-border = $to-border[$main-side]
  $next-border = $to-border[$next-side]
  $prev-border = $to-border[$prev-side]
  $shorter-size = ($size / 2)
  width: 0
  height: 0
  border-{$main-border}: $shorter-size solid $color
  border-{$next-border}: $shorter-size solid $color-transparent
  border-{$prev-border}: $shorter-size solid $color-transparent

/* Component mixins */
page-overlay()
  position: fixed
  top: 0
  left: 0
  height: 100%
  width: 100%
  z-index: $zIndexModalBackdrop
  background-color: alpha($b, 0.8)

or-section()
  padding: 10px
  background-color: $w
  margin: 5px 5px 0

or-button(backgroundColor, width, fontColor = $bgy)
  border: none
  height: 44px
  or-border-radius()
  background-color: backgroundColor
  width: width
  or-font(fontColor, 17px, SB)

  &.disabled
  &[disabled]
    background-color: $egy
    color: $dgy
    pointer-events: none

text-button()
  text-align: center
  padding-bottom: 30px
  or-border(bottom)
  or-font($dgy, 16px)
  display: block

or-scrollbar(thickness = 6, trackColor = #e3e3e3, thumbColor = $bgy)
  scrollbar-track-color: trackColor
  scrollbar-base-color: thumbColor
  scrollbar-shadow-color: thumbColor

  &::-webkit-scrollbar
    width: default-unit(thickness, 'px')
    height: default-unit(thickness, 'px')

  &::-webkit-scrollbar-track-piece
    background-color: trackColor
    border-radius: default-unit((thickness / 2), 'px')

  &::-webkit-scrollbar-thumb
    background-color: alpha(thumbColor, 0.75)
    border-radius: default-unit((thickness / 2), 'px')

    &:hover
      background-color: thumbColor

floating-bar()
  sticky(bottom)
  background-color: $w
  width: 100%
  box-shadow: 0 -2px 4px 0 alpha($b, 0.25)
  border: none

subview-floating-button-wrapper($padding = 15px)
  position: fixed
  left: 0
  right: 0
  bottom: 0
  padding: 0 $padding $padding

/* Cross vendor (browser) mixins */
clean-text-input-vendor-styles()
  padding: 0
  border: none
  border-radius: 0 // Useful when 'border none' is overridden by component
  outline: none
  background: none

  &::placeholder
  &[disabled]
    opacity: 1

  &::-ms-clear
    display: none
    width: 0
    height: 0

text-input-colors($color = null, $disabled-color = null, $placeholder-color = null)
  if $color != null
    color: $color

  if $disabled-color != null
    &[disabled]
      color: $disabled-color
      -webkit-text-fill-color: $disabled-color // For iOS Safari

  if $placeholder-color != null
    &::placeholder
      color: $placeholder-color

/* CSS hacks */
clear-fix()
  display: inline-block

  &::after
    visibility: hidden
    display: block
    font-size: 0
    content: ' '
    clear: both
    height: 0

flying-carpet-ad()
  .ad-flying-carpet
    display: block
    position: relative
    overflow: hidden !important

  .ad-flying-carpet-clip
    position: absolute !important
    top: 0 !important
    left: 0 !important
    width: 100% !important
    height: 100% !important
    clip: rect(0, auto, auto, 0) !important
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%) !important

  .ad-flying-carpet-container
    position: fixed !important
    top: 0 !important
    left: 0 !important
    width: 100%
    height: 100%
    -webkit-transform: translateZ(0) !important // Fix performance issue on Safari
    display: flex
    flex-direction: column
    align-items: center
    justify-content: center

flatpickr-customize()
  .flatpickr-calendar
    box-shadow: none
    width: 350px
    visibility: inherit !important

  .flatpickr-months
    margin-bottom: 15px

    .flatpickr-current-month
      font-size: 20px

      .flatpickr-monthDropdown-months
        -webkit-appearance: none
        -moz-appearance: none
        text-indent: 1px
        border: 0
        outline: 0
        color: $bgy

      .cur-month
        font-weight: $font-weight-SB

      .numInput
        font-weight: $font-weight-SB

  .numInputWrapper
  .cur-month
    pointer-events: none

  .flatpickr-days
    width: 350px

    .dayContainer
      justify-content: flex-start
      width: 350px
      min-width: 350px
      max-width: 350px

      .prevMonthDay
        visibility: hidden

  .flatpickr-day
    or-border-radius()
    max-width: 50px
    height: 50px
    line-height: 50px
    display: flex
    align-items: center

    &.today
    &:hover
    &.today:hover
      color: $bgy
      background: none
      border: 2px solid $cgy

    &.today
      border: none

    &.selected
      background: none !important
      border-color: $g !important
      color: $g !important
      border: 2px solid !important

    &.flatpickr-disabled
    &.disabled
      color: $cgy
      pointer-events: none

  .flatpickr-weekdays
    height: 37px

  .flatpickr-weekday
    color: $dgy
    font-weight: $font-weight-N

  .nextMonthDay
    display: none
